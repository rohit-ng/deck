name: Deck Deployment

on:
  pull_request:
    branches:
      - main
    paths:
      - "teams/**"
      - "global/**"

  push:
    branches:
      - main
    paths:
      - "teams/**"
      - "global/**"

  workflow_dispatch:
    inputs:
      rollback:
        description: 'Rollback to the previous configuration'
        required: true
        default: 'false'
      version:
        description: 'Version of the backup to rollback to'
        required: false
        default: ''

jobs:
  deck_commands:
    runs-on: deck
    name: Run decK commands
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::471112575944:role/github-actions"
          aws-region: ap-south-1

      - name: Install unzip
        run: sudo apt-get install -y unzip

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Install decK
        run: |
          curl -sL https://github.com/kong/deck/releases/download/v1.38.1/deck_1.38.1_linux_amd64.tar.gz -o deck.tar.gz
          tar -xf deck.tar.gz -C /tmp
          sudo cp /tmp/deck /usr/local/bin/
          rm deck.tar.gz

      - name: Deck ping
        id: ping
        timeout-minutes: 2
        continue-on-error: false
        run: deck gateway ping --kong-addr ${{ secrets.KONG_ADDR }}
      
      - name: Prepare directory
        id: config
        run: |
          rsync -av --include='teams/***' --include='global/***' --exclude='*' . configurations/

      - name: Deck validate
        id: validate
        run: |
          deck gateway validate configurations --kong-addr ${{ secrets.KONG_ADDR }}

      - name: Deck diff
        id: diff
        timeout-minutes: 10
        if: github.event_name == 'pull_request'
        continue-on-error: false
        run: |
          deck gateway diff configurations --json-output > deck-diff --kong-addr ${{ secrets.KONG_ADDR }}

      - name: Format file
        id: format
        if: github.event_name == 'pull_request'
        continue-on-error: false
        run: |
          JSON_RESPONSE=$(cat deck-diff)
          echo "DECK_DIFF<<EOF" >> $GITHUB_ENV
          echo "$JSON_RESPONSE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Post comment for pull request
        if: github.event_name == 'pull_request'
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            ## ðŸ”„ Kong Configuration Diff
            Here is the diff of the Kong configuration:

            ```diff
            ${{ env.DECK_DIFF }}
            ```

            **Note:** The changes above will be applied to the Kong configuration.

      - name: Backup current Kong configuration
        id: backup
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        continue-on-error: false
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          BACKUP_FILE="kong-backup-$TIMESTAMP.yaml"
          deck gateway dump --format yaml --output-file $BACKUP_FILE --kong-addr ${{ secrets.KONG_ADDR }}
          aws s3 cp $BACKUP_FILE s3://d-kong/$BACKUP_FILE

      - name: Deck sync
        id: sync
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        continue-on-error: true
        run: |
          SYNC_FAILED=0
            if ! deck gateway sync configurations --kong-addr ${{ secrets.KONG_ADDR }}; then
              SYNC_FAILED=1
            fi

          if [ $SYNC_FAILED -ne 0 ]; then
            echo "Sync failed. Proceeding to reset Kong configuration."
            deck gateway reset --kong-addr ${{ secrets.KONG_ADDR }}
            echo "Restoring previous configuration from dump file."
            LATEST_BACKUP=$(aws s3 ls s3://d-kong/ | sort | tail -n 1 | awk '{print $4}')
            aws s3 cp s3://d-kong/$LATEST_BACKUP kong-backup.yaml
            deck gateway sync kong-backup.yaml --kong-addr ${{ secrets.KONG_ADDR }}
          else
            echo "Sync successful."
          fi

  rollback:
    runs-on: deck
    name: Rollback Kong configuration
    if: github.event.inputs.rollback == 'true'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::471112575944:role/github-actions"
          aws-region: ap-south-1

      - name: Install unzip
        run: sudo apt-get install -y unzip
        
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Install decK
        run: |
          curl -sL https://github.com/kong/deck/releases/download/v1.38.1/deck_1.38.1_linux_amd64.tar.gz -o deck.tar.gz
          tar -xf deck.tar.gz -C /tmp
          sudo cp /tmp/deck /usr/local/bin/
          rm deck.tar.gz
      
      - name: Download backup configuration
        run: |
          if [ "${{ github.event.inputs.version }}" == "" ]; then
            LATEST_BACKUP=$(aws s3 ls s3://d-kong/ | sort | tail -n 1 | awk '{print $4}')
            aws s3 cp s3://d-kong/$LATEST_BACKUP kong-backup.yaml
          else
            aws s3 cp s3://d-kong/kong-backup-${{ github.event.inputs.version }}.yaml kong-backup.yaml
          fi

      - name: Rollback to previous configuration
        run: |
          deck gateway reset --kong-addr ${{ secrets.KONG_ADDR }}
          deck gateway sync kong-backup.yaml --kong-addr ${{ secrets.KONG_ADDR }}
